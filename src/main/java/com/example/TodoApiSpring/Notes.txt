MVC - Model View Controller
// Model - Data
// View - UI
// Controller - Logic

Controller - that part of code which is responsible for collecting incoming user request and provide it to the models
            layer then whatever response is generated by the models layer it will be sent to the user via controller

Model - that part of code where all the business logic is written and all the data manipulation is done layer.
        It is also responsible for interacting with the database layer.

View - that part of code which is responsible for displaying the data to the user in a presentable format.

Orchestration layer is responsible for managing the flow of data and control between different services and components.
Orchestrator - that part of code which is responsible for coordinating between different services and components to achieve a specific task.

SockJs - It is a JavaScript library that provides a WebSocket-like object in environments that don't support WebSockets.
            It is used to create a fallback mechanism for WebSocket connections.

STOMP - Simple Text Oriented Messaging Protocol
        It is a simple and lightweight protocol for messaging between clients and servers.

long polling - It is a technique used to maintain a persistent connection between the client and server.
                In long polling, the client sends a request to the server and waits for a response.
                If the server has no new data to send, it holds the request open until new data is available or a timeout occurs.
                Once new data is available, the server sends the response to the client, and the client immediately sends a new request to the server.
                This process continues, allowing the client to receive real-time updates from the server.

WebSocket - It is a protocol that provides full-duplex communication channels over a single TCP connection.
            It is used to create a persistent connection between the client and server, allowing for real-time data transfer.

WebSocket is more efficient than long polling because it eliminates the need for repeated HTTP requests and responses.

JBDC - Java Database Connectivity
        It is an API that allows Java programs to interact with databases.

Connection Driver - It is a class that implements the java.sql.Driver interface and is responsible for establishing a connection to the database.
                    It is used to connect to the database and execute SQL queries.

JPA - Java Persistence API
        It is a specification for managing relational data in Java applications.
        It provides a way to map Java objects to database tables and vice versa.

Concrete classes - It is a class that has a complete implementation and can be instantiated.
                It is a class that is not abstract and does not have any abstract methods.

ORM - Object Relational Mapping
        It is a technique that allows developers to interact with a database using object-oriented programming concepts.
        It provides a way to map Java objects to database tables and vice versa.

Hibernate - It is an ORM framework that provides a way to map Java objects to database tables and vice versa.
            It is used to simplify database interactions and reduce boilerplate code.

JPA Annotations - It is a set of annotations that are used to define the mapping between Java objects and database tables.
                    It is used to specify the entity, table, column, and relationship mappings.

JPA Architecture - It consists of three main components: Entity Manager, Entity, and Persistence Unit.
                    Entity Manager - It is responsible for managing the lifecycle of entities and providing an interface for database operations.
                    Entity - It is a Java class that represents a database table and is annotated with JPA annotations.
                    Persistence Unit - It is a configuration file that defines the database connection properties and other settings.

Spring Data JPA - It is a part of the Spring Framework that provides a way to simplify database interactions using JPA.
                    It provides a set of interfaces and classes that make it easy to perform CRUD operations and query the database.

